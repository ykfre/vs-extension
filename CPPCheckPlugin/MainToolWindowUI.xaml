<UserControl x:Class="VSPackage.CPPCheckPlugin.MainToolWindowUI"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:vsp="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.15.0"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="400">

    <ListView Margin="0" Name="listView" MouseDoubleClick="onProblemDoubleClick"
                  ScrollViewer.CanContentScroll ="False" Background="Transparent">

        <ListView.Resources>
            <DataTemplate x:Key="Template">
                <Image Source="{Binding Path=Icon}"/>
            </DataTemplate>

            <ContextMenu x:Key="ItemContextMenu">
                <MenuItem x:Name="menuItem_suppressThisMessageProjectWide"
                    Click="menuItem_suppressThisMessageProjectWide"
                    Header="Suppress this specific message for the Project">
                </MenuItem>
                <MenuItem x:Name="menuItem_suppressThisMessageSolutionWide"
                    Click="menuItem_suppressThisMessageSolutionWide"
                    Header="Suppress this specific message for the whole Solution">
                </MenuItem>
                <MenuItem x:Name="menuItem_suppressThisMessageGlobally"
                    Click="menuItem_suppressThisMessageGlobally"
                    Header="Suppress this specific message Globally">
                </MenuItem>
                <Separator/>
                <MenuItem x:Name="menuItem_suppressThisTypeOfMessageFileWide"
                    Click="menuItem_suppressThisTypeOfMessageFileWide"
                    Header="Suppress this type of messages in the whole File">
                </MenuItem>
                <MenuItem x:Name="menuItem_suppressThisTypeOfMessageProjectWide"
                    Click="menuItem_suppressThisTypeOfMessageProjectWide"
                    Header="Suppress this type of messages in the whole Project">
                </MenuItem>
                <MenuItem x:Name="menuItem_suppressThisTypeOfMessageSolutionWide"
                    Click="menuItem_suppressThisTypeOfMessageSolutionWide"
                    Header="Suppress this type of messages in the whole Solution">
                </MenuItem>
                <MenuItem x:Name="menuItem_suppressThisTypeOfMessageGlobally"
                    Click="menuItem_suppressThisTypeOfMessageGlobally"
                    Header="Suppress this type of messages Globally">
                </MenuItem>
                <Separator/>
                <MenuItem x:Name="menuItem_suppressAllMessagesThisFileProjectWide"
                    Click="menuItem_suppressAllMessagesThisFileProjectWide"
                    Header="Suppress all messages from this file in the Project">
                </MenuItem>
                <MenuItem x:Name="menuItem_suppressAllMessagesThisFileSolutionWide"
                    Click="menuItem_suppressAllMessagesThisFileSolutionWide"
                    Header="Suppress all messages from this file in the whole Solution">
                </MenuItem>
                <MenuItem x:Name="menuItem_suppressAllMessagesThisFileGlobally"
                    Click="menuItem_suppressAllMessagesThisFileGlobally"
                    Header="Suppress all messages from this file Globally">
                </MenuItem>
            </ContextMenu>
        </ListView.Resources>
        <ListView.ItemContainerStyle>
            <Style TargetType="{x:Type ListViewItem}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListViewItem}">
                            <Border x:Name="Bd"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Background="{TemplateBinding Background}"
                                        Padding="{TemplateBinding Padding}"
                                        SnapsToDevicePixels="true">
                                <GridViewRowPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="ContextMenu" Value="{StaticResource ItemContextMenu}"/>
                <Setter Property="VerticalContentAlignment" Value="Top"/>
                <Style.Triggers>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Background" Value="{DynamicResource {x:Static vsp:TreeViewColors.SelectedItemActiveBrushKey}}" />
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static vsp:TreeViewColors.SelectedItemActiveTextBrushKey}}" />
                    </Trigger>
                    <Trigger Property="IsSelected" Value="False">
                        <Setter Property="Background" Value="{DynamicResource {x:Static vsp:TreeViewColors.BackgroundBrushKey}}" />
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static vsp:TreeViewColors.BackgroundTextBrushKey}}" />
                    </Trigger>
                </Style.Triggers>
            </Style>
        </ListView.ItemContainerStyle>
        <ListView.View>
            <GridView>
                <GridView.ColumnHeaderContainerStyle>
                    <Style TargetType="{x:Type GridViewColumnHeader}">
                        <Setter Property="Background" Value="{DynamicResource {x:Static vsp:HeaderColors.DefaultBrushKey}}" />
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static vsp:HeaderColors.DefaultTextBrushKey}}" />
                        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static vsp:HeaderColors.SeparatorLineBrushKey}}"/>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{DynamicResource {x:Static vsp:HeaderColors.MouseOverBrushKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static vsp:HeaderColors.MouseOverTextBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="{DynamicResource {x:Static vsp:HeaderColors.MouseDownBrushKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static vsp:HeaderColors.MouseDownTextBrushKey}}"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </GridView.ColumnHeaderContainerStyle>
                <GridViewColumn x:Name="FileNameColumn" DisplayMemberBinding="{Binding FileName}" Width="Auto">
                    <GridViewColumn.Header>
                        <GridViewColumnHeader Tag="FileName" Click="problemColumnHeader_Click">File</GridViewColumnHeader>
                    </GridViewColumn.Header>
                </GridViewColumn>
                <GridViewColumn x:Name="LineColumn" DisplayMemberBinding="{Binding Line}" Width="Auto">
                    <GridViewColumn.Header>
                        <GridViewColumnHeader Tag="Line">Line</GridViewColumnHeader>
                    </GridViewColumn.Header>
                </GridViewColumn>
                <GridViewColumn x:Name="ColColumn" DisplayMemberBinding="{Binding Col}" Width="Auto">
                    <GridViewColumn.Header>
                        <GridViewColumnHeader Tag="Col">Col</GridViewColumnHeader>
                    </GridViewColumn.Header>
                </GridViewColumn>

                <GridViewColumn x:Name="SeverColumn" DisplayMemberBinding="{Binding Severity}" Width="Auto">
                    <GridViewColumn.Header>
                        <GridViewColumnHeader Tag="Severity" Click="problemColumnHeader_Click" >Severity</GridViewColumnHeader>
                    </GridViewColumn.Header>
                </GridViewColumn>
                <GridViewColumn x:Name="MessageColumn" Width="{Binding ElementName=helperField, Path=ActualWidth}">
                    <GridViewColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock TextWrapping="Wrap" Text="{Binding Message}" />
                        </DataTemplate>
                    </GridViewColumn.CellTemplate>
                    <GridViewColumn.Header>
                        <GridViewColumnHeader Tag="Message" Click="problemColumnHeader_Click" Width="Auto">Message</GridViewColumnHeader>
                    </GridViewColumn.Header>
                </GridViewColumn>

                <GridViewColumn x:Name="AutosarColumn" Width="{Binding ElementName=helperField, Path=ActualWidth}">
                    <GridViewColumnHeader Tag="Autosar" Width="Auto">Autosar</GridViewColumnHeader>

                    <GridViewColumn.CellTemplate>
                        <DataTemplate>
                        <TextBlock>
      <Hyperlink NavigateUri="{Binding Path=AutosarWeb}" RequestNavigate="Hyperlink_OnRequestNavigate">
        <TextBlock Text="link"/>
      </Hyperlink>
    </TextBlock>
                        </DataTemplate>
                    </GridViewColumn.CellTemplate>
                </GridViewColumn>

                <GridViewColumn x:Name="AxivionColumn" Width="{Binding ElementName=helperField, Path=ActualWidth}">
                    <GridViewColumnHeader Tag="Axivion" Width="Auto">Axivion</GridViewColumnHeader>

                    <GridViewColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock>
      <Hyperlink NavigateUri="{Binding Path=AxivionWeb}" RequestNavigate="Hyperlink_OnRequestNavigate">
        <TextBlock Text="link"/>
      </Hyperlink>
    </TextBlock>
                        </DataTemplate>
                    </GridViewColumn.CellTemplate>
                </GridViewColumn>
            </GridView>
        </ListView.View>
    </ListView>
</UserControl>
